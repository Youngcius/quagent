"""
Django settings for quagent project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
import json
from pathlib import Path
from utils.host import ipv4


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p3*(+)8619s9ftd58gy0lbr(sk*2zv(&b$yzx_4b0@7eumu1lo'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

CONFIG_JSON = 'config.json'

# Application definition

INSTALLED_APPS = [
    'simpleui',  # third-part UI library, for administrative page
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main.apps.MainConfig',
    'acquire.apps.AcquisitionConfig',
    'hubinfo.apps.HubinfoConfig',
    'monitor.apps.MonitorConfig',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'quagent.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'quagent.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

with open(CONFIG_JSON, 'r') as f:
    DATABASES['default'] = json.load(f)['MYSQL']

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False  # modified on 06.02

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

LOGIN_REDIRECT_URL = '/'  # redirect to the main page

# whether to show the right-side SimpleUI "advertising links" and "usage analysis"
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# set default theme, i.e., a CSS file name presenting a theme setting
SIMPLEUI_DEFAULT_THEME = 'layui.css'  # e.g., 'purple.css', 'element.css', 'admin.lte.css'

# set logo
SIMPLEUI_LOGO = 'http://youngcius.com/images/other/cqn-logo.png'

# set shown menus
SIMPLEUI_CONFIG = {
    # whether to use system-default menu
    'system_keep': False,

    # for menus ordering and filtering
    # if no setting, all fields display; if set an empty list, all fields will not display
    'menu_display': [
        'Authentication and Authorization',
        'User Hub Information',
        'Resources Management',
        'Real-time Monitoring'
    ],

    # whether to turn on the dynamic menu. if on, menus are refreshed once one user logins
    'dynamic': False,  # generally turn it off by advice

    # set menus manually
    'menus': [
        {
            'app': 'auth',
            'name': 'Authentication and Authorization',
            'icon': 'fas fa-user-shield',
            'models': [
                {
                    'name': 'Users',
                    'icon': 'fa fa-user',
                    'url': 'auth/user/'
                },
                {
                    'name': 'Groups (Laboratories)',
                    'icon': 'fa fa-users',
                    # 'url': 'auth/group/'
                    'url': '/admin/hubinfo/laboratory'
                },

            ]
        },

        {
            'name': 'User Hub Information',
            'icon': 'fa fa-th-list',
            'models': [
                {
                    'name': 'Entangled-Photon Sources Linkage',
                    'url': '/admin/hubinfo/epslinks/',  # all lower letters
                    'icon': 'fa fa-info'
                },
                {
                    'name': 'SPD Channels Linkage',
                    'url': '/admin/hubinfo/spdslinks',
                    'icon': 'fa fa-info'
                },
            ]
        },
        {
            'name': 'Resources Management',
            'icon': 'fa fa-tags',
            'models': [
                {
                    'name': 'Reservation Records',
                    'icon': 'fa fa-database',
                    'url': '/admin/hubinfo/reservation/'

                }
            ]
        },

        {
            'name': 'Real-time Monitoring',
            'icon': 'fa fa-desktop',
            'models': [  # append display module
                {
                    'name': 'Network Testbed Operation Maps',
                    'icon': 'fa fa-map-marker',
                    # 'url': 'http://127.0.0.1:8000/monitor/maps/'
                    'url': 'http://{}:8000/monitor/maps/'.format(ipv4)

                },
            ]
        },

    ]
}

###########################################
# email setting (google mail)
EMAIL_BACKEND = ...
EMAIL_HOST = ...
EMAIL_PORT = ...
EMAIL_HOST_USER = ...
EMAIL_HOST_PASSWORD = ...  # special password
EMAIL_FROM = ...

with open(CONFIG_JSON, 'r') as f:
    email_settings = json.load(f)['EMAIL']

for k, v in email_settings.items():
    exec("{} = '{}'".format(k, v))
